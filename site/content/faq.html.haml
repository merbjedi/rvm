%h1
  rvm FAQ & Notes
%h2
  Do I need to use sudo with gems?
%p
  %strong
    NO. DO NOT USE sudo
  for rvm managed rubygems.
  If you require more explanation see the
  %a{ :href => "/gems/" }
    gems
  page.
%h2
  Install gems as root?
%p
  %strong
    NO.
  If you require more explanation see the
  %a{ :href => "/gems/" }
    gems
  page.
%h2
  rvm is not found or the rvm selected default ruby is not set for new shells...
%p
  rvm must be included at the bottom of the profile files. Otherwise your settings will clobber it's (example: PATH)
%h2
  Can I use a path with spaces?
%p
  Currently spaces in paths are not supported. Patches welcome :)
%h2
  How do I set a ruby to be default?
%p
  Seting the default ruby is
  %a{ :href => "/setdefault" }
    explained here
  \.
  %h2
    What are the defaults.
  %p
    The default implementation (interpreter) is 'ruby'.  The default versions for each ruby implementation are:
    %ul
      %li
        ruby: 1.8.6
      %li
        jruby: 1.3.1
      %li
        rubinius: current head
  </ul>
  %h2
    Where are Ruby Gems kept?
  %ul
    %li
      Ruby Gems for all installed ruby interpreters and versions are stored completely separate.
      Gems are located in ~/.rvm/gems/$interpreter/$version.
      Gems can be additionally separated using
      %a{ :href => "/gemsets" }
        Gem Sets
      \.
  %h2
    Where is everything installed to ?
  %p
    rvm installs everything into ~/.rvm. To remove rvm from your system simply remove ~.rvm.
    You may have one additional config file in ~/.rvmrc and of course the rvm hook in your bash/zsh startup files.
  %h2
    Do I need the gem after I install rvm?
  %p
    No, the gem is only used for distribution, you can just as easily clone the github repo and run ./install.
    After installation the Gem is no longer necessary and can be safely removed.
  %h2
    How do I get my rvm set default Ruby to work with TextMate?
  %blockquote
    Peter Cooper Says: August 27th, 2009 at 1:55 am
    %p
      Chris: I just spent an hour looking into this, lol. TextMate is a pain in the ass in this regard. Basically it didn't respect the PATH switches RVM does at all and the TM stance seems to be you need to manually set the PATH in the preferences which is lame IMHO.

  %p
    Here's the fix to make it all "just work". You'll need to edit 2 files within the Textmate.app package.

  %pre.code
    :preserve
      Open the file:
      /Applications/TextMate.app/Contents/SharedSupport/Support/lib/tm/process.rb

      Find the line:
      exec(*cmd.compact)
      
      Replace it with: 
      exec("bash -lc '" + cmd.compact.join(" ") + "'")
        
  %pre.code    
    :preserve
      Open the file:
      /Applications/TextMate.app/Contents/SharedSupport/Bundles/Ruby.tmbundle/Support/RubyMate/run_script.rb
      
      Find this line:
      cmd = [ENV['TM_RUBY'] || 'ruby', '-KU', '-rcatch_exception']
      
      Right before it add:
      ENV['TM_RUBY'] = nil if ENV['TM_RUBY'] == '/usr/bin/ruby'
      
      So the result looks like:
      ENV['TM_RUBY'] = nil if ENV['TM_RUBY'] == '/usr/bin/ruby'
      cmd = [ENV['TM_RUBY'] || 'ruby', '-KU', '-rcatch_exception']
  
  %p
    Then restart the app. Textmate will now use the ruby installation that rvm has set for the default. So if you
    want Textmate to switch Ruby versions, just run "rvm [version] --default" to switch it to your desired version.
  
  %h2
    How do I get Netbeans to see my Ruby's gems?
  %p
    Thanks to our friendly mr-interweb on IRC:
  %blockquote
    13:46 mr-interweb: Netbeans was detecting the wrong gem root
    %br
    13:48 mr-interweb: Just a FYI in case other people have problems with Netbeans, Netbeans does not allow you to type in a path. You must browse to the path, but it will not show you hidden folders. So, you must create symbolic links like "ln -s ~/.gem ~/gem"
